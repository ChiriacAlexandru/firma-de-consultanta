#include <stdio.h>
#include <stdlib.h>

#define N 8

int board[N][N];

// Verifică dacă o regină poate fi plasată pe board[row][col]
int isSafe(int row, int col) {
    int i, j;

    // Verifică pe aceeași coloană
    for (i = 0; i < row; i++)
        if (board[i][col])
            return 0;

    // Verifică diagonala principală (stânga sus)
    for (i = row, j = col; i >= 0 && j >= 0; i--, j--)
        if (board[i][j])
            return 0;

    // Verifică diagonala secundară (dreapta sus)
    for (i = row, j = col; i >= 0 && j < N; i--, j++)
        if (board[i][j])
            return 0;

    return 1;
}

// Funcția recursivă care rezolvă problema
int solveNQueens(int row) {
    if (row == N) {
        return 1;
    }

    for (int col = 0; col < N; col++) {
        if (isSafe(row, col)) {
            board[row][col] = 1;

            if (solveNQueens(row + 1))
                return 1;

            board[row][col] = 0; // backtrack
        }
    }

    return 0;
}

// Afișează soluția
void printBoard() {
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            printf(board[i][j] ? " Q " : " . ");
        }
        printf("\n");
    }
}

int main() {
    if (solveNQueens(0)) {
        printBoard();
    } else {
        printf("Nu există soluție.\n");
    }

    return 0;
}
